diff --git a/web/pgadmin/static/js/helpers/Notifier.jsx b/web/pgadmin/static/js/helpers/Notifier.jsx
index 8338dfbdd..39c99ace5 100644
--- a/web/pgadmin/static/js/helpers/Notifier.jsx
+++ b/web/pgadmin/static/js/helpers/Notifier.jsx
@@ -15,7 +15,7 @@ import { DefaultButton, PrimaryButton } from '../components/Buttons';
 import HTMLReactParser from 'html-react-parser';
 import CheckRoundedIcon from '@material-ui/icons/CheckRounded';
 import PropTypes from 'prop-types';
-import React, { useEffect } from 'react';
+import React from 'react';
 import { NotifierMessage, MESSAGE_TYPE } from '../components/FormComponents';
 import CustomPropTypes from '../custom_prop_types';
 import gettext from 'sources/gettext';
@@ -186,36 +186,23 @@ class Notifier {
 
 export function NotifierProvider({ pgAdmin, pgWindow, getInstance, children, onReady }) {
   const modal = useModal();
-
-  useEffect(()=>{
-    // if open in an iframe then use top pgAdmin
-    if(window.self != window.top) {
-      pgAdmin.Browser.notifier = new Notifier(modal, pgWindow.pgAdmin.Browser.notifier.snackbar);
-      onReady?.();
-      getInstance?.(pgAdmin.Browser.notifier);
-    }
-  }, []);
-
-  // if open in a window, then create your own Snackbar
-  if(window.self == window.top) {
-    return (
-      <SnackbarProvider
-        maxSnack={30}
-        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
-        ref={(obj)=>{
-          pgAdmin.Browser.notifier = new Notifier(modal, new SnackbarNotifier(obj));
-          getInstance?.(pgAdmin.Browser.notifier);
-          onReady?.();
-        }}
-      >
-        {children}
-      </SnackbarProvider>
-    );
+  
+  if (pgWindow?.pgAdmin) {
+    pgWindow.pgAdmin.hass_modified = true;  
   }
+
   return (
-    <>
+    <SnackbarProvider
+      maxSnack={30}
+      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
+      ref={(obj)=>{
+        pgAdmin.Browser.notifier = new Notifier(modal, new SnackbarNotifier(obj));
+        getInstance?.(pgAdmin.Browser.notifier);
+        onReady?.();
+      }}
+    >
       {children}
-    </>
+    </SnackbarProvider>
   );
 }
 
